--================================================
-- WMAPE & BIAS
-- Export Overall Results
--================================================
-- Build Table

WITH FORECAST_DATA AS (
    SELECT ITEM, LOCATION, SEGMENT_ID, PREDICTION_STATUS, SUM(history) AS HISTORY,
           SUM(SEASONAL_FORECAST) AS SEASONAL_FORECAST, SUM(ABS_ERROR_SEASONAL) AS SEASONAL_ERROR,
           SUM(ARIMA_FORECAST) AS ARIMA_FORECAST, SUM(ABS_ERROR_ARIMA) AS ARIMA_ERROR,
           SUM(XGBOOST_FORECAST) AS XGBOOST_FORECAST, SUM(ABS_ERROR_XGBOOST) AS XGBOOST_ERROR,
           SUM(MA_FORECAST) AS MA_FORECAST, SUM(ABS_ERROR_MA) AS MA_ERROR,
           SUM(BLENDED_FORECAST) AS BLENDED_FORECAST, SUM(ABS_ERROR_BLENDED) AS BLENDED_ERROR,
           SUM(DEMANTRA_FORECAST) AS DEMANTRA_FORECAST, SUM(ABS_ERROR_DEMANTRA) AS DEMANTRA_ERROR
    FROM (SELECT MAX(T1.ITEM_ID) AS ITEM, MAX(T1.LOCATION_ID) AS LOCATION, MAX(SEGMENT_DEM_ID) AS SEGMENT_ID,
                 MAX(CASE WHEN DEMAND_VALID = TRUE THEN 1 ELSE 0 END) AS PREDICTION_STATUS,
                 MIN(SALES_DATE) AS DATE,
                 SUM(T1.FINAL_HISTORY) AS HISTORY,
                 SUM(COALESCE(T1.demand_forecast_1, 0)) AS SEASONAL_FORECAST, ABS(sum(T1.FINAL_HISTORY) - SUM(COALESCE(T1.demand_forecast_1, 0))) AS ABS_ERROR_SEASONAL,
                 SUM(COALESCE(T1.demand_forecast_2, 0)) AS ARIMA_FORECAST, ABS(sum(T1.FINAL_HISTORY) - SUM(COALESCE(T1.demand_forecast_2, 0))) AS ABS_ERROR_ARIMA,
                 SUM(COALESCE(T1.demand_forecast_3, 0)) AS XGBOOST_FORECAST, ABS(sum(T1.FINAL_HISTORY) - SUM(COALESCE(T1.demand_forecast_3, 0))) AS ABS_ERROR_XGBOOST,
                 SUM(COALESCE(T1.demand_forecast_4, 0)) AS MA_FORECAST, ABS(sum(T1.FINAL_HISTORY) - SUM(COALESCE(T1.demand_forecast_4, 0))) AS ABS_ERROR_MA,
                 SUM(COALESCE(T1.demand_forecast, 0)) AS BLENDED_FORECAST, ABS(sum(T1.FINAL_HISTORY) - SUM(COALESCE(T1.demand_forecast, 0))) AS ABS_ERROR_BLENDED,
                 SUM(COALESCE(T1.final_forecast, 0)) AS DEMANTRA_FORECAST, ABS(sum(T1.FINAL_HISTORY) - SUM(COALESCE(T1.final_forecast, 0))) AS ABS_ERROR_DEMANTRA
          FROM
              (SELECT DATA.*, CAL.*
               FROM PUBLIC.DS_DATA AS DATA
                        JOIN PUBLIC.CALENDAR AS CAL ON CAL.DATE = DATA.SALES_DATE
              ) AS T1 , DS_MATRIX AS MATRIX
          WHERE T1.ITEM_ID = MATRIX.ITEM_ID
            AND T1.LOCATION_ID = MATRIX.LOCATION_ID
            AND SALES_DATE >= :start_date
            AND SALES_DATE <= :end_date
          GROUP BY T1.ITEM_ID,T1.LOCATION_ID, T1.AGGREGATION_2 -- for monthly aggregation_2, for weekly aggregation_1
         )
    WHERE SEGMENT_ID = :segment_id
    GROUP BY item, location, SEGMENT_ID, PREDICTION_STATUS)
--============================
-- Export Overall Results
--============================
SELECT 'SEASONAL' AS MODEL, SUM(HISTORY) AS HISTORY, ROUND(SUM(SEASONAL_FORECAST)) AS FORECAST, ROUND(SUM(SEASONAL_ERROR)) AS ABS_ERROR,
       ROUND(ROUND((SUM(SEASONAL_ERROR)/NULLIF(SUM(HISTORY), 0))::NUMERIC, 4) * 100,2) AS WMAPE,
       ROUND(ROUND(((SUM(HISTORY)-SUM(SEASONAL_FORECAST))/NULLIF(SUM(HISTORY), 0))::NUMERIC,4) * 100,2) AS BIAS
FROM FORECAST_DATA
UNION ALL
SELECT 'ARIMA' AS MODEL, SUM(HISTORY) AS HISTORY, ROUND(SUM(ARIMA_FORECAST)) AS FORECAST, ROUND(SUM(ARIMA_ERROR)) AS ABS_ERROR,
       ROUND(ROUND((SUM(ARIMA_ERROR)/NULLIF(SUM(HISTORY), 0))::NUMERIC, 4) * 100,2) AS WMAPE,
       ROUND(ROUND(((SUM(HISTORY)-SUM(ARIMA_FORECAST))/NULLIF(SUM(HISTORY), 0))::NUMERIC,4) * 100,2) AS BIAS
FROM FORECAST_DATA
UNION ALL
SELECT 'XGBOOST' AS MODEL, SUM(HISTORY) AS HISTORY, ROUND(SUM(XGBOOST_FORECAST)) AS FORECAST, ROUND(SUM(XGBOOST_ERROR)) AS ABS_ERROR,
       ROUND(ROUND((SUM(XGBOOST_ERROR)/NULLIF(SUM(HISTORY), 0))::NUMERIC, 4) * 100,2) AS WMAPE,
       ROUND(ROUND(((SUM(HISTORY)-SUM(XGBOOST_FORECAST))/NULLIF(SUM(HISTORY), 0))::NUMERIC,4) * 100,2) AS BIAS
FROM FORECAST_DATA
UNION ALL
SELECT 'MA' AS MODEL, SUM(HISTORY) AS HISTORY, ROUND(SUM(MA_FORECAST)) AS FORECAST, ROUND(SUM(MA_ERROR)) AS ABS_ERROR,
       ROUND(ROUND((SUM(MA_ERROR)/NULLIF(SUM(HISTORY), 0))::NUMERIC, 4) * 100,2) AS WMAPE,
       ROUND(ROUND(((SUM(HISTORY)-SUM(MA_FORECAST))/NULLIF(SUM(HISTORY), 0))::NUMERIC,4) * 100,2) AS BIAS
FROM FORECAST_DATA
UNION ALL
SELECT 'BLENDED' AS MODEL, SUM(HISTORY) AS HISTORY, ROUND(SUM(BLENDED_FORECAST)) AS FORECAST, ROUND(SUM(BLENDED_ERROR)) AS ABS_ERROR,
       ROUND(ROUND((SUM(BLENDED_ERROR)/NULLIF(SUM(HISTORY), 0))::NUMERIC, 4) * 100,2) AS WMAPE,
       ROUND(ROUND(((SUM(HISTORY)-SUM(BLENDED_FORECAST))/NULLIF(SUM(HISTORY), 0))::NUMERIC,4) * 100,2) AS BIAS
FROM FORECAST_DATA
UNION ALL
SELECT 'DEMANTRA' AS MODEL, SUM(HISTORY) AS HISTORY, ROUND(SUM(DEMANTRA_FORECAST)) AS FORECAST, ROUND(SUM(DEMANTRA_ERROR)) AS ABS_ERROR,
       ROUND(ROUND((SUM(DEMANTRA_ERROR)/NULLIF(SUM(HISTORY), 0))::NUMERIC, 4) * 100,2) AS WMAPE,
       ROUND(ROUND(((SUM(HISTORY)-SUM(DEMANTRA_FORECAST))/NULLIF(SUM(HISTORY), 0))::NUMERIC,4) * 100,2) AS BIAS
FROM FORECAST_DATA;